// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type Futur string

const (
	FuturRobotics Futur = "robotics"
	FuturSpace    Futur = "space"
	FuturBrain    Futur = "brain"
	FuturAnimals  Futur = "animals"
	FuturAutre    Futur = "autre"
)

func (e *Futur) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Futur(s)
	case string:
		*e = Futur(s)
	default:
		return fmt.Errorf("unsupported scan type for Futur: %T", src)
	}
	return nil
}

type Role string

const (
	RoleAdmin Role = "admin"
	RolePro   Role = "pro"
	RoleUser  Role = "user"
)

func (e *Role) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Role(s)
	case string:
		*e = Role(s)
	default:
		return fmt.Errorf("unsupported scan type for Role: %T", src)
	}
	return nil
}

type Contact struct {
	ID        uuid.UUID    `json:"id"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
	Email     string       `json:"email"`
	Msg       string       `json:"msg"`
	UserID    uuid.UUID    `json:"user_id"`
}

type Datum struct {
	ID          uuid.UUID      `json:"id"`
	CreatedAt   time.Time      `json:"created_at"`
	UpdatedAt   time.Time      `json:"updated_at"`
	DeletedAt   sql.NullTime   `json:"deleted_at"`
	Title       string         `json:"title"`
	Description string         `json:"description"`
	UserID      uuid.UUID      `json:"user_id"`
	Img         sql.NullString `json:"img"`
	Category    Futur          `json:"category"`
}

type File struct {
	ID        uuid.UUID      `json:"id"`
	CreatedAt time.Time      `json:"created_at"`
	UpdatedAt time.Time      `json:"updated_at"`
	DeletedAt sql.NullTime   `json:"deleted_at"`
	Name      sql.NullString `json:"name"`
	Url       sql.NullString `json:"url"`
	Mime      sql.NullString `json:"mime"`
	Size      sql.NullInt64  `json:"size"`
}

type RefreshToken struct {
	ID        uuid.UUID    `json:"id"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt time.Time    `json:"updated_at"`
	DeletedAt sql.NullTime `json:"deleted_at"`
	Token     string       `json:"token"`
	ExpirOn   time.Time    `json:"expir_on"`
	UserID    uuid.UUID    `json:"user_id"`
}

type User struct {
	ID                  uuid.UUID      `json:"id"`
	CreatedAt           time.Time      `json:"created_at"`
	UpdatedAt           time.Time      `json:"updated_at"`
	DeletedAt           sql.NullTime   `json:"deleted_at"`
	Email               string         `json:"email"`
	Password            string         `json:"password"`
	Firstname           sql.NullString `json:"firstname"`
	Lastname            sql.NullString `json:"lastname"`
	Username            string         `json:"username"`
	PasswordConfirmCode sql.NullString `json:"password_confirm_code"`
	Role                Role           `json:"role"`
	Stock               int64          `json:"stock"`
	Avatar              sql.NullString `json:"avatar"`
}
