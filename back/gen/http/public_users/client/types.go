// Code generated by goa v3.7.2, DO NOT EDIT.
//
// publicUsers HTTP client types
//
// Command:
// $ goa gen webcup/back/design

package client

import (
	publicusers "webcup/back/gen/public_users"

	goa "goa.design/goa/v3/pkg"
)

// ListUsersRequestBody is the type of the "publicUsers" service "listUsers"
// endpoint HTTP request body.
type ListUsersRequestBody struct {
	Key string `form:"key" json:"key" xml:"key"`
}

// GetUserByUsernameResponseBody is the type of the "publicUsers" service
// "getUserByUsername" endpoint HTTP response body.
type GetUserByUsernameResponseBody struct {
	// Result is an object
	User    *ResUserResponseBody `form:"user,omitempty" json:"user,omitempty" xml:"user,omitempty"`
	Success *bool                `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ListUsersResponseBody is the type of the "publicUsers" service "listUsers"
// endpoint HTTP response body.
type ListUsersResponseBody struct {
	// Result is an an array of user
	Users   []*ResUserResponseBody `form:"users,omitempty" json:"users,omitempty" xml:"users,omitempty"`
	Success *bool                  `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ListUsersMostRecentResponseBody is the type of the "publicUsers" service
// "listUsersMostRecent" endpoint HTTP response body.
type ListUsersMostRecentResponseBody struct {
	// Result is an an array of user
	Users   []*ResUserResponseBody `form:"users,omitempty" json:"users,omitempty" xml:"users,omitempty"`
	Success *bool                  `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
	// total of users
	Count *int64 `form:"count,omitempty" json:"count,omitempty" xml:"count,omitempty"`
}

// GetUserByUsernameUnknownErrorResponseBody is the type of the "publicUsers"
// service "getUserByUsername" endpoint HTTP response body for the
// "unknown_error" error.
type GetUserByUsernameUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ListUsersUnknownErrorResponseBody is the type of the "publicUsers" service
// "listUsers" endpoint HTTP response body for the "unknown_error" error.
type ListUsersUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ListUsersMostRecentUnknownErrorResponseBody is the type of the "publicUsers"
// service "listUsersMostRecent" endpoint HTTP response body for the
// "unknown_error" error.
type ListUsersMostRecentUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ResUserResponseBody is used to define fields on response body types.
type ResUserResponseBody struct {
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Firstname *string `form:"firstname,omitempty" json:"firstname,omitempty" xml:"firstname,omitempty"`
	Lastname  *string `form:"lastname,omitempty" json:"lastname,omitempty" xml:"lastname,omitempty"`
	Username  *string `form:"username,omitempty" json:"username,omitempty" xml:"username,omitempty"`
	Email     *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	// User is admin or not
	Role   *string `form:"role,omitempty" json:"role,omitempty" xml:"role,omitempty"`
	Avatar *string `form:"avatar,omitempty" json:"avatar,omitempty" xml:"avatar,omitempty"`
}

// NewListUsersRequestBody builds the HTTP request body from the payload of the
// "listUsers" endpoint of the "publicUsers" service.
func NewListUsersRequestBody(p *publicusers.ListUsersPayload) *ListUsersRequestBody {
	body := &ListUsersRequestBody{
		Key: p.Key,
	}
	return body
}

// NewGetUserByUsernameResultOK builds a "publicUsers" service
// "getUserByUsername" endpoint result from a HTTP "OK" response.
func NewGetUserByUsernameResultOK(body *GetUserByUsernameResponseBody) *publicusers.GetUserByUsernameResult {
	v := &publicusers.GetUserByUsernameResult{
		Success: *body.Success,
	}
	v.User = unmarshalResUserResponseBodyToPublicusersResUser(body.User)

	return v
}

// NewGetUserByUsernameUnknownError builds a publicUsers service
// getUserByUsername endpoint unknown_error error.
func NewGetUserByUsernameUnknownError(body *GetUserByUsernameUnknownErrorResponseBody) *publicusers.UnknownError {
	v := &publicusers.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewGetUserByUsernameOauthError builds a publicUsers service
// getUserByUsername endpoint oauth_error error.
func NewGetUserByUsernameOauthError(body string) publicusers.OauthError {
	v := publicusers.OauthError(body)

	return v
}

// NewListUsersResultOK builds a "publicUsers" service "listUsers" endpoint
// result from a HTTP "OK" response.
func NewListUsersResultOK(body *ListUsersResponseBody) *publicusers.ListUsersResult {
	v := &publicusers.ListUsersResult{
		Success: *body.Success,
	}
	v.Users = make([]*publicusers.ResUser, len(body.Users))
	for i, val := range body.Users {
		v.Users[i] = unmarshalResUserResponseBodyToPublicusersResUser(val)
	}

	return v
}

// NewListUsersUnknownError builds a publicUsers service listUsers endpoint
// unknown_error error.
func NewListUsersUnknownError(body *ListUsersUnknownErrorResponseBody) *publicusers.UnknownError {
	v := &publicusers.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewListUsersOauthError builds a publicUsers service listUsers endpoint
// oauth_error error.
func NewListUsersOauthError(body string) publicusers.OauthError {
	v := publicusers.OauthError(body)

	return v
}

// NewListUsersMostRecentResultOK builds a "publicUsers" service
// "listUsersMostRecent" endpoint result from a HTTP "OK" response.
func NewListUsersMostRecentResultOK(body *ListUsersMostRecentResponseBody) *publicusers.ListUsersMostRecentResult {
	v := &publicusers.ListUsersMostRecentResult{
		Success: *body.Success,
		Count:   *body.Count,
	}
	v.Users = make([]*publicusers.ResUser, len(body.Users))
	for i, val := range body.Users {
		v.Users[i] = unmarshalResUserResponseBodyToPublicusersResUser(val)
	}

	return v
}

// NewListUsersMostRecentUnknownError builds a publicUsers service
// listUsersMostRecent endpoint unknown_error error.
func NewListUsersMostRecentUnknownError(body *ListUsersMostRecentUnknownErrorResponseBody) *publicusers.UnknownError {
	v := &publicusers.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewListUsersMostRecentOauthError builds a publicUsers service
// listUsersMostRecent endpoint oauth_error error.
func NewListUsersMostRecentOauthError(body string) publicusers.OauthError {
	v := publicusers.OauthError(body)

	return v
}

// ValidateGetUserByUsernameResponseBody runs the validations defined on
// GetUserByUsernameResponseBody
func ValidateGetUserByUsernameResponseBody(body *GetUserByUsernameResponseBody) (err error) {
	if body.User == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("user", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.User != nil {
		if err2 := ValidateResUserResponseBody(body.User); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateListUsersResponseBody runs the validations defined on
// ListUsersResponseBody
func ValidateListUsersResponseBody(body *ListUsersResponseBody) (err error) {
	if body.Users == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("users", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	for _, e := range body.Users {
		if e != nil {
			if err2 := ValidateResUserResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateListUsersMostRecentResponseBody runs the validations defined on
// ListUsersMostRecentResponseBody
func ValidateListUsersMostRecentResponseBody(body *ListUsersMostRecentResponseBody) (err error) {
	if body.Users == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("users", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Count == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("count", "body"))
	}
	for _, e := range body.Users {
		if e != nil {
			if err2 := ValidateResUserResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateGetUserByUsernameUnknownErrorResponseBody runs the validations
// defined on getUserByUsername_unknown_error_response_body
func ValidateGetUserByUsernameUnknownErrorResponseBody(body *GetUserByUsernameUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateListUsersUnknownErrorResponseBody runs the validations defined on
// listUsers_unknown_error_response_body
func ValidateListUsersUnknownErrorResponseBody(body *ListUsersUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateListUsersMostRecentUnknownErrorResponseBody runs the validations
// defined on listUsersMostRecent_unknown_error_response_body
func ValidateListUsersMostRecentUnknownErrorResponseBody(body *ListUsersMostRecentUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateResUserResponseBody runs the validations defined on
// resUserResponseBody
func ValidateResUserResponseBody(body *ResUserResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Email == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("email", "body"))
	}
	if body.Username == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("username", "body"))
	}
	if body.Firstname == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("firstname", "body"))
	}
	if body.Lastname == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("lastname", "body"))
	}
	if body.Avatar == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("avatar", "body"))
	}
	if body.Role == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("role", "body"))
	}
	return
}
