// Code generated by goa v3.7.2, DO NOT EDIT.
//
// publicUsers service
//
// Command:
// $ goa gen webcup/back/design

package publicusers

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// public route of users
type Service interface {
	// Get one User by username
	GetUserByUsername(context.Context, *GetUserByUsernamePayload) (res *GetUserByUsernameResult, err error)
	// List users for search bar
	ListUsers(context.Context, *ListUsersPayload) (res *ListUsersResult, err error)
	// List users the most recent
	ListUsersMostRecent(context.Context, *ListUsersMostRecentPayload) (res *ListUsersMostRecentResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// OAuth2Auth implements the authorization logic for the OAuth2 security scheme.
	OAuth2Auth(ctx context.Context, token string, schema *security.OAuth2Scheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "publicUsers"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"getUserByUsername", "listUsers", "listUsersMostRecent"}

// GetUserByUsernamePayload is the payload type of the publicUsers service
// getUserByUsername method.
type GetUserByUsernamePayload struct {
	Username string
	// Use to generate Oauth with /authorization
	Oauth *string
}

// GetUserByUsernameResult is the result type of the publicUsers service
// getUserByUsername method.
type GetUserByUsernameResult struct {
	// Result is an object
	User    *ResUser
	Success bool
}

// ListUsersMostRecentPayload is the payload type of the publicUsers service
// listUsersMostRecent method.
type ListUsersMostRecentPayload struct {
	// Use to generate Oauth with /authorization
	Oauth *string
	// Offset for pagination
	Offset int32
	// Limit of items listed for pagination
	Limit int32
}

// ListUsersMostRecentResult is the result type of the publicUsers service
// listUsersMostRecent method.
type ListUsersMostRecentResult struct {
	// Result is an an array of user
	Users   []*ResUser
	Success bool
	// total of users
	Count int64
}

// ListUsersPayload is the payload type of the publicUsers service listUsers
// method.
type ListUsersPayload struct {
	Key string
	// Use to generate Oauth with /authorization
	Oauth *string
}

// ListUsersResult is the result type of the publicUsers service listUsers
// method.
type ListUsersResult struct {
	// Result is an an array of user
	Users   []*ResUser
	Success bool
}

type ResUser struct {
	ID        string
	Firstname string
	Lastname  string
	Username  string
	Email     string
	// User is admin or not
	Role   string
	Avatar string
}

// Error when a request is send before asking for oAuth
type OauthError string

type UnknownError struct {
	Err       string
	ErrorCode string
	Success   bool
}

// Error returns an error description.
func (e OauthError) Error() string {
	return "Error when a request is send before asking for oAuth"
}

// ErrorName returns "oauth_error".
func (e OauthError) ErrorName() string {
	return "oauth_error"
}

// Error returns an error description.
func (e *UnknownError) Error() string {
	return ""
}

// ErrorName returns "unknownError".
func (e *UnknownError) ErrorName() string {
	return "unknown_error"
}

// MakeTimeout builds a goa.ServiceError from an error.
func MakeTimeout(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "timeout",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
		Timeout: true,
	}
}
