// Code generated by goa v3.7.3, DO NOT EDIT.
//
// boContact HTTP client types
//
// Command:
// $ goa gen webcup/design

package client

import (
	bocontact "webcup/gen/bo_contact"

	goa "goa.design/goa/v3/pkg"
)

// DeleteBoManyContactRequestBody is the type of the "boContact" service
// "deleteBoManyContact" endpoint HTTP request body.
type DeleteBoManyContactRequestBody struct {
	Tab []string `form:"tab" json:"tab" xml:"tab"`
}

// GetBoContactResponseBody is the type of the "boContact" service
// "getBoContact" endpoint HTTP response body.
type GetBoContactResponseBody struct {
	// All messages
	Contacts []*ResContactResponseBody `form:"contacts,omitempty" json:"contacts,omitempty" xml:"contacts,omitempty"`
	// total of messages
	Count   *int64 `form:"count,omitempty" json:"count,omitempty" xml:"count,omitempty"`
	Success *bool  `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteBoContactResponseBody is the type of the "boContact" service
// "deleteBoContact" endpoint HTTP response body.
type DeleteBoContactResponseBody struct {
	Success *bool `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetBoContactByIDResponseBody is the type of the "boContact" service
// "getBoContactByID" endpoint HTTP response body.
type GetBoContactByIDResponseBody struct {
	Success *bool `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
	// One message
	Contact *ResContactResponseBody `form:"contact,omitempty" json:"contact,omitempty" xml:"contact,omitempty"`
}

// DeleteBoManyContactResponseBody is the type of the "boContact" service
// "deleteBoManyContact" endpoint HTTP response body.
type DeleteBoManyContactResponseBody struct {
	Success *bool `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetBoContactUnknownErrorResponseBody is the type of the "boContact" service
// "getBoContact" endpoint HTTP response body for the "unknown_error" error.
type GetBoContactUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteBoContactUnknownErrorResponseBody is the type of the "boContact"
// service "deleteBoContact" endpoint HTTP response body for the
// "unknown_error" error.
type DeleteBoContactUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetBoContactByIDUnknownErrorResponseBody is the type of the "boContact"
// service "getBoContactByID" endpoint HTTP response body for the
// "unknown_error" error.
type GetBoContactByIDUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteBoManyContactUnknownErrorResponseBody is the type of the "boContact"
// service "deleteBoManyContact" endpoint HTTP response body for the
// "unknown_error" error.
type DeleteBoManyContactUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ResContactResponseBody is used to define fields on response body types.
type ResContactResponseBody struct {
	ID      *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	UserID  *string `form:"user_id,omitempty" json:"user_id,omitempty" xml:"user_id,omitempty"`
	Email   *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// NewDeleteBoManyContactRequestBody builds the HTTP request body from the
// payload of the "deleteBoManyContact" endpoint of the "boContact" service.
func NewDeleteBoManyContactRequestBody(p *bocontact.DeleteBoManyContactPayload) *DeleteBoManyContactRequestBody {
	body := &DeleteBoManyContactRequestBody{}
	if p.Tab != nil {
		body.Tab = make([]string, len(p.Tab))
		for i, val := range p.Tab {
			body.Tab[i] = val
		}
	}
	return body
}

// NewGetBoContactResultOK builds a "boContact" service "getBoContact" endpoint
// result from a HTTP "OK" response.
func NewGetBoContactResultOK(body *GetBoContactResponseBody) *bocontact.GetBoContactResult {
	v := &bocontact.GetBoContactResult{
		Count:   *body.Count,
		Success: *body.Success,
	}
	v.Contacts = make([]*bocontact.ResContact, len(body.Contacts))
	for i, val := range body.Contacts {
		v.Contacts[i] = unmarshalResContactResponseBodyToBocontactResContact(val)
	}

	return v
}

// NewGetBoContactUnknownError builds a boContact service getBoContact endpoint
// unknown_error error.
func NewGetBoContactUnknownError(body *GetBoContactUnknownErrorResponseBody) *bocontact.UnknownError {
	v := &bocontact.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewDeleteBoContactResultOK builds a "boContact" service "deleteBoContact"
// endpoint result from a HTTP "OK" response.
func NewDeleteBoContactResultOK(body *DeleteBoContactResponseBody) *bocontact.DeleteBoContactResult {
	v := &bocontact.DeleteBoContactResult{
		Success: *body.Success,
	}

	return v
}

// NewDeleteBoContactUnknownError builds a boContact service deleteBoContact
// endpoint unknown_error error.
func NewDeleteBoContactUnknownError(body *DeleteBoContactUnknownErrorResponseBody) *bocontact.UnknownError {
	v := &bocontact.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewGetBoContactByIDResultOK builds a "boContact" service "getBoContactByID"
// endpoint result from a HTTP "OK" response.
func NewGetBoContactByIDResultOK(body *GetBoContactByIDResponseBody) *bocontact.GetBoContactByIDResult {
	v := &bocontact.GetBoContactByIDResult{
		Success: *body.Success,
	}
	if body.Contact != nil {
		v.Contact = unmarshalResContactResponseBodyToBocontactResContact(body.Contact)
	}

	return v
}

// NewGetBoContactByIDUnknownError builds a boContact service getBoContactByID
// endpoint unknown_error error.
func NewGetBoContactByIDUnknownError(body *GetBoContactByIDUnknownErrorResponseBody) *bocontact.UnknownError {
	v := &bocontact.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewDeleteBoManyContactResultOK builds a "boContact" service
// "deleteBoManyContact" endpoint result from a HTTP "OK" response.
func NewDeleteBoManyContactResultOK(body *DeleteBoManyContactResponseBody) *bocontact.DeleteBoManyContactResult {
	v := &bocontact.DeleteBoManyContactResult{
		Success: *body.Success,
	}

	return v
}

// NewDeleteBoManyContactUnknownError builds a boContact service
// deleteBoManyContact endpoint unknown_error error.
func NewDeleteBoManyContactUnknownError(body *DeleteBoManyContactUnknownErrorResponseBody) *bocontact.UnknownError {
	v := &bocontact.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// ValidateGetBoContactResponseBody runs the validations defined on
// GetBoContactResponseBody
func ValidateGetBoContactResponseBody(body *GetBoContactResponseBody) (err error) {
	if body.Contacts == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("contacts", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Count == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("count", "body"))
	}
	for _, e := range body.Contacts {
		if e != nil {
			if err2 := ValidateResContactResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateDeleteBoContactResponseBody runs the validations defined on
// DeleteBoContactResponseBody
func ValidateDeleteBoContactResponseBody(body *DeleteBoContactResponseBody) (err error) {
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	return
}

// ValidateGetBoContactByIDResponseBody runs the validations defined on
// GetBoContactByIDResponseBody
func ValidateGetBoContactByIDResponseBody(body *GetBoContactByIDResponseBody) (err error) {
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Contact != nil {
		if err2 := ValidateResContactResponseBody(body.Contact); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateDeleteBoManyContactResponseBody runs the validations defined on
// DeleteBoManyContactResponseBody
func ValidateDeleteBoManyContactResponseBody(body *DeleteBoManyContactResponseBody) (err error) {
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	return
}

// ValidateGetBoContactUnknownErrorResponseBody runs the validations defined on
// getBoContact_unknown_error_response_body
func ValidateGetBoContactUnknownErrorResponseBody(body *GetBoContactUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateDeleteBoContactUnknownErrorResponseBody runs the validations defined
// on deleteBoContact_unknown_error_response_body
func ValidateDeleteBoContactUnknownErrorResponseBody(body *DeleteBoContactUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateGetBoContactByIDUnknownErrorResponseBody runs the validations
// defined on getBoContactByID_unknown_error_response_body
func ValidateGetBoContactByIDUnknownErrorResponseBody(body *GetBoContactByIDUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateDeleteBoManyContactUnknownErrorResponseBody runs the validations
// defined on deleteBoManyContact_unknown_error_response_body
func ValidateDeleteBoManyContactUnknownErrorResponseBody(body *DeleteBoManyContactUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateResContactResponseBody runs the validations defined on
// resContactResponseBody
func ValidateResContactResponseBody(body *ResContactResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Email == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("email", "body"))
	}
	if body.UserID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("user_id", "body"))
	}
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}
