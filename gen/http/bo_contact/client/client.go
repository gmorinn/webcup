// Code generated by goa v3.7.3, DO NOT EDIT.
//
// boContact client HTTP transport
//
// Command:
// $ goa gen webcup/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the boContact service endpoint HTTP clients.
type Client struct {
	// GetBoContact Doer is the HTTP client used to make requests to the
	// getBoContact endpoint.
	GetBoContactDoer goahttp.Doer

	// DeleteBoContact Doer is the HTTP client used to make requests to the
	// deleteBoContact endpoint.
	DeleteBoContactDoer goahttp.Doer

	// GetBoContactByID Doer is the HTTP client used to make requests to the
	// getBoContactByID endpoint.
	GetBoContactByIDDoer goahttp.Doer

	// DeleteBoManyContact Doer is the HTTP client used to make requests to the
	// deleteBoManyContact endpoint.
	DeleteBoManyContactDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the boContact service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		GetBoContactDoer:        doer,
		DeleteBoContactDoer:     doer,
		GetBoContactByIDDoer:    doer,
		DeleteBoManyContactDoer: doer,
		CORSDoer:                doer,
		RestoreResponseBody:     restoreBody,
		scheme:                  scheme,
		host:                    host,
		decoder:                 dec,
		encoder:                 enc,
	}
}

// GetBoContact returns an endpoint that makes HTTP requests to the boContact
// service getBoContact server.
func (c *Client) GetBoContact() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetBoContactRequest(c.encoder)
		decodeResponse = DecodeGetBoContactResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetBoContactRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetBoContactDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("boContact", "getBoContact", err)
		}
		return decodeResponse(resp)
	}
}

// DeleteBoContact returns an endpoint that makes HTTP requests to the
// boContact service deleteBoContact server.
func (c *Client) DeleteBoContact() goa.Endpoint {
	var (
		encodeRequest  = EncodeDeleteBoContactRequest(c.encoder)
		decodeResponse = DecodeDeleteBoContactResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildDeleteBoContactRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DeleteBoContactDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("boContact", "deleteBoContact", err)
		}
		return decodeResponse(resp)
	}
}

// GetBoContactByID returns an endpoint that makes HTTP requests to the
// boContact service getBoContactByID server.
func (c *Client) GetBoContactByID() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetBoContactByIDRequest(c.encoder)
		decodeResponse = DecodeGetBoContactByIDResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetBoContactByIDRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetBoContactByIDDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("boContact", "getBoContactByID", err)
		}
		return decodeResponse(resp)
	}
}

// DeleteBoManyContact returns an endpoint that makes HTTP requests to the
// boContact service deleteBoManyContact server.
func (c *Client) DeleteBoManyContact() goa.Endpoint {
	var (
		encodeRequest  = EncodeDeleteBoManyContactRequest(c.encoder)
		decodeResponse = DecodeDeleteBoManyContactResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildDeleteBoManyContactRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DeleteBoManyContactDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("boContact", "deleteBoManyContact", err)
		}
		return decodeResponse(resp)
	}
}
