// Code generated by goa v3.7.3, DO NOT EDIT.
//
// publicUsers client HTTP transport
//
// Command:
// $ goa gen webcup/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the publicUsers service endpoint HTTP clients.
type Client struct {
	// GetUserByUsername Doer is the HTTP client used to make requests to the
	// getUserByUsername endpoint.
	GetUserByUsernameDoer goahttp.Doer

	// ListUsers Doer is the HTTP client used to make requests to the listUsers
	// endpoint.
	ListUsersDoer goahttp.Doer

	// ListUsersMostRecent Doer is the HTTP client used to make requests to the
	// listUsersMostRecent endpoint.
	ListUsersMostRecentDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the publicUsers service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		GetUserByUsernameDoer:   doer,
		ListUsersDoer:           doer,
		ListUsersMostRecentDoer: doer,
		CORSDoer:                doer,
		RestoreResponseBody:     restoreBody,
		scheme:                  scheme,
		host:                    host,
		decoder:                 dec,
		encoder:                 enc,
	}
}

// GetUserByUsername returns an endpoint that makes HTTP requests to the
// publicUsers service getUserByUsername server.
func (c *Client) GetUserByUsername() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetUserByUsernameRequest(c.encoder)
		decodeResponse = DecodeGetUserByUsernameResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetUserByUsernameRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetUserByUsernameDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("publicUsers", "getUserByUsername", err)
		}
		return decodeResponse(resp)
	}
}

// ListUsers returns an endpoint that makes HTTP requests to the publicUsers
// service listUsers server.
func (c *Client) ListUsers() goa.Endpoint {
	var (
		encodeRequest  = EncodeListUsersRequest(c.encoder)
		decodeResponse = DecodeListUsersResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildListUsersRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ListUsersDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("publicUsers", "listUsers", err)
		}
		return decodeResponse(resp)
	}
}

// ListUsersMostRecent returns an endpoint that makes HTTP requests to the
// publicUsers service listUsersMostRecent server.
func (c *Client) ListUsersMostRecent() goa.Endpoint {
	var (
		encodeRequest  = EncodeListUsersMostRecentRequest(c.encoder)
		decodeResponse = DecodeListUsersMostRecentResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildListUsersMostRecentRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ListUsersMostRecentDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("publicUsers", "listUsersMostRecent", err)
		}
		return decodeResponse(resp)
	}
}
