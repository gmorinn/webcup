// Code generated by goa v3.7.3, DO NOT EDIT.
//
// bo client HTTP transport
//
// Command:
// $ goa gen webcup/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the bo service endpoint HTTP clients.
type Client struct {
	// GetBoUsers Doer is the HTTP client used to make requests to the getBoUsers
	// endpoint.
	GetBoUsersDoer goahttp.Doer

	// GetBoData Doer is the HTTP client used to make requests to the getBoData
	// endpoint.
	GetBoDataDoer goahttp.Doer

	// DeleteBoUser Doer is the HTTP client used to make requests to the
	// deleteBoUser endpoint.
	DeleteBoUserDoer goahttp.Doer

	// DeleteBoManyUsers Doer is the HTTP client used to make requests to the
	// deleteBoManyUsers endpoint.
	DeleteBoManyUsersDoer goahttp.Doer

	// UpdateBoUser Doer is the HTTP client used to make requests to the
	// updateBoUser endpoint.
	UpdateBoUserDoer goahttp.Doer

	// GetBoUser Doer is the HTTP client used to make requests to the getBoUser
	// endpoint.
	GetBoUserDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the bo service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		GetBoUsersDoer:        doer,
		GetBoDataDoer:         doer,
		DeleteBoUserDoer:      doer,
		DeleteBoManyUsersDoer: doer,
		UpdateBoUserDoer:      doer,
		GetBoUserDoer:         doer,
		CORSDoer:              doer,
		RestoreResponseBody:   restoreBody,
		scheme:                scheme,
		host:                  host,
		decoder:               dec,
		encoder:               enc,
	}
}

// GetBoUsers returns an endpoint that makes HTTP requests to the bo service
// getBoUsers server.
func (c *Client) GetBoUsers() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetBoUsersRequest(c.encoder)
		decodeResponse = DecodeGetBoUsersResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetBoUsersRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetBoUsersDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("bo", "getBoUsers", err)
		}
		return decodeResponse(resp)
	}
}

// GetBoData returns an endpoint that makes HTTP requests to the bo service
// getBoData server.
func (c *Client) GetBoData() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetBoDataRequest(c.encoder)
		decodeResponse = DecodeGetBoDataResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetBoDataRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetBoDataDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("bo", "getBoData", err)
		}
		return decodeResponse(resp)
	}
}

// DeleteBoUser returns an endpoint that makes HTTP requests to the bo service
// deleteBoUser server.
func (c *Client) DeleteBoUser() goa.Endpoint {
	var (
		encodeRequest  = EncodeDeleteBoUserRequest(c.encoder)
		decodeResponse = DecodeDeleteBoUserResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildDeleteBoUserRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DeleteBoUserDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("bo", "deleteBoUser", err)
		}
		return decodeResponse(resp)
	}
}

// DeleteBoManyUsers returns an endpoint that makes HTTP requests to the bo
// service deleteBoManyUsers server.
func (c *Client) DeleteBoManyUsers() goa.Endpoint {
	var (
		encodeRequest  = EncodeDeleteBoManyUsersRequest(c.encoder)
		decodeResponse = DecodeDeleteBoManyUsersResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildDeleteBoManyUsersRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DeleteBoManyUsersDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("bo", "deleteBoManyUsers", err)
		}
		return decodeResponse(resp)
	}
}

// UpdateBoUser returns an endpoint that makes HTTP requests to the bo service
// updateBoUser server.
func (c *Client) UpdateBoUser() goa.Endpoint {
	var (
		encodeRequest  = EncodeUpdateBoUserRequest(c.encoder)
		decodeResponse = DecodeUpdateBoUserResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildUpdateBoUserRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.UpdateBoUserDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("bo", "updateBoUser", err)
		}
		return decodeResponse(resp)
	}
}

// GetBoUser returns an endpoint that makes HTTP requests to the bo service
// getBoUser server.
func (c *Client) GetBoUser() goa.Endpoint {
	var (
		encodeRequest  = EncodeGetBoUserRequest(c.encoder)
		decodeResponse = DecodeGetBoUserResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetBoUserRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetBoUserDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("bo", "getBoUser", err)
		}
		return decodeResponse(resp)
	}
}
