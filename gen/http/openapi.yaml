swagger: "2.0"
info:
  title: webcup
  description: Best API REST building with GoaDesign
  contact:
    name: Guillaume MORIN
    email: guillaume.morin@epitech.eu
    url: https://guillaume-morin.fr/
  license:
    name: GOA X GM
    url: https://guillaume-morin.fr/
  version: "1.0"
host: :0
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /authorization:
    post:
      tags:
      - oAuth
      summary: oAuth oAuth
      description: oAuth
      operationId: oAuth#oAuth
      parameters:
      - name: OAuthRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/OAuthOAuthRequestBody'
          required:
          - client_id
          - client_secret
          - grant_type
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/OAuthOAuthCreatedResponseBody'
            required:
            - access_token
            - token_type
            - expires_in
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/OAuthOAuthBadRequestResponseBody'
            required:
            - access_token
            - token_type
            - expires_in
            - success
        "401":
          description: Unauthorized response.
          schema:
            type: string
        "403":
          description: Forbidden response.
          schema:
            type: string
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/OAuthOAuthUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
  /bo/signin:
    post:
      tags:
      - jwtToken
      summary: signinBo jwtToken
      description: signin for back-office, user needs to be admin
      operationId: jwtToken#signinBo
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: SigninBoRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenSigninBoRequestBody'
          required:
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenSigninBoResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenSigninBoUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /openapi.json:
    get:
      tags:
      - openapi
      summary: Download openapi3.json
      description: Postman generated by Goa
      externalDocs:
        description: cd Public && live-server to see the Documentation of the API
        url: http://127.0.0.1:8080/
      operationId: openapi#/openapi.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
  /public/{path}:
    get:
      tags:
      - fileapi
      summary: Download bin/public
      description: Serve static content.
      operationId: fileapi#/public/{*path}
      parameters:
      - name: path
        in: path
        description: Relative file path
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/Error'
      schemes:
      - http
  /resfresh:
    post:
      tags:
      - jwtToken
      summary: refresh jwtToken
      description: Refresh Token
      operationId: jwtToken#refresh
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: RefreshRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenRefreshRequestBody'
          required:
          - refresh_token
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /signin:
    post:
      tags:
      - jwtToken
      summary: signin jwtToken
      description: signin
      operationId: jwtToken#signin
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: SigninRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenSigninRequestBody'
          required:
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenSigninResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenSigninUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /signup:
    post:
      tags:
      - jwtToken
      summary: signup jwtToken
      description: signup to generate jwt token
      operationId: jwtToken#signup
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: SignupRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenSignupRequestBody'
          required:
          - email
          - password
          - confirm_password
          - username
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenSignupResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenSignupUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /v1/bo/contacts/{id}:
    get:
      tags:
      - boContact
      summary: getBoContactByID boContact
      description: get one contact by ID
      operationId: boContact#getBoContactByID
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoContactGetBoContactByIDResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoContactGetBoContactByIDUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/contacts/messages/{offset}/{limit}:
    get:
      tags:
      - boContact
      summary: getBoContact boContact
      description: Get All messages
      operationId: boContact#getBoContact
      parameters:
      - name: field
        in: query
        description: Items order by {field}
        required: false
        type: string
        default: name
      - name: direction
        in: query
        description: Items order by {field} ASC/DESC
        required: false
        type: string
        default: asc
        enum:
        - asc
        - desc
      - name: offset
        in: path
        description: Offset for pagination
        required: true
        type: integer
        format: int32
      - name: limit
        in: path
        description: Limit of items listed for pagination
        required: true
        type: integer
        format: int32
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoContactGetBoContactResponseBody'
            required:
            - contacts
            - success
            - count
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoContactGetBoContactUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/contacts/remove:
    patch:
      tags:
      - boContact
      summary: deleteBoManyContact boContact
      description: Delete many contact with IDs send in body
      operationId: boContact#deleteBoManyContact
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: DeleteBoManyContactRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/BoContactDeleteBoManyContactRequestBody'
          required:
          - tab
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoContactDeleteBoManyContactResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoContactDeleteBoManyContactUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/contacts/remove/{id}:
    put:
      tags:
      - boContact
      summary: deleteBoContact boContact
      description: Delete one contact by ID
      operationId: boContact#deleteBoContact
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoContactDeleteBoContactResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoContactDeleteBoContactUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/file/add:
    post:
      tags:
      - files
      summary: importFile files
      description: Import file
      operationId: files#importFile
      consumes:
      - multipart/form-data
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: ImportFileRequestBody
        in: formData
        required: true
        schema:
          $ref: '#/definitions/FilesImportFileRequestBody'
          required:
          - filename
          - content
          - format
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/FilesImportFileResponseBody'
            required:
            - success
            - file
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/FilesImportFileUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/file/remove:
    patch:
      tags:
      - files
      summary: deleteFile files
      description: Delete one file by ID
      operationId: files#deleteFile
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: DeleteFileRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/FilesDeleteFileRequestBody'
          required:
          - url
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/FilesDeleteFileResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/FilesDeleteFileUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/user/{id}:
    get:
      tags:
      - bo
      summary: getBoUser bo
      description: Get one User
      operationId: bo#getBoUser
      parameters:
      - name: id
        in: path
        description: Unique ID of the User
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoGetBoUserResponseBody'
            required:
            - user
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoGetBoUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
    put:
      tags:
      - bo
      summary: updateBoUser bo
      description: Update one User
      operationId: bo#updateBoUser
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: UpdateBoUserRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/BoUpdateBoUserRequestBody'
          required:
          - user
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoUpdateBoUserResponseBody'
            required:
            - user
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoUpdateBoUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/user/remove/{id}:
    delete:
      tags:
      - bo
      summary: deleteBoUser bo
      description: Delete one User by ID
      operationId: bo#deleteBoUser
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoDeleteBoUserResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoDeleteBoUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/users/{offset}/{limit}:
    get:
      tags:
      - bo
      summary: getBoUsers bo
      description: Get All users
      operationId: bo#getBoUsers
      parameters:
      - name: field
        in: query
        description: Items order by {field}
        required: false
        type: string
        default: name
      - name: direction
        in: query
        description: Items order by {field} ASC/DESC
        required: false
        type: string
        default: asc
        enum:
        - asc
        - desc
      - name: offset
        in: path
        description: Offset for pagination
        required: true
        type: integer
        format: int32
      - name: limit
        in: path
        description: Limit of items listed for pagination
        required: true
        type: integer
        format: int32
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoGetBoUsersResponseBody'
            required:
            - users
            - success
            - count
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoGetBoUsersUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/bo/users/remove:
    patch:
      tags:
      - bo
      summary: deleteBoManyUsers bo
      description: Delete many users with IDs send in body
      operationId: bo#deleteBoManyUsers
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: DeleteBoManyUsersRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/BoDeleteBoManyUsersRequestBody'
          required:
          - tab
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BoDeleteBoManyUsersResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BoDeleteBoManyUsersUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/email-exist:
    post:
      tags:
      - auth
      summary: email-exist auth
      description: Check if email exist in database
      operationId: auth#email-exist
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: Email-ExistRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/AuthEmailExistRequestBody'
          required:
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/AuthEmailExistResponseBody'
            required:
            - exist
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/AuthEmailExistUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /v1/lost:
    post:
      tags:
      - auth
      summary: send-confirmation auth
      description: Check if email exist in database and send code by email to reset
        password
      operationId: auth#send-confirmation
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: Send-ConfirmationRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/AuthSendConfirmationRequestBody'
          required:
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/AuthSendConfirmationResponseBody'
            required:
            - exist
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/AuthSendConfirmationUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /v1/reset-password:
    put:
      tags:
      - auth
      summary: reset-password auth
      description: Reset forget password of the user with the correct confirm code
      operationId: auth#reset-password
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: Reset-PasswordRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/AuthResetPasswordRequestBody'
          required:
          - email
          - code
          - password
          - confirm_password
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/AuthResetPasswordResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/AuthResetPasswordUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /v1/web/contacts/add:
    post:
      tags:
      - contacts
      summary: addMessage contacts
      description: user ask for something
      operationId: contacts#addMessage
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: AddMessageRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/ContactsAddMessageRequestBody'
          required:
          - user_id
          - msg
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/ContactsAddMessageResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/ContactsAddMessageUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/web/public/user/{username}:
    get:
      tags:
      - publicUsers
      summary: getUserByUsername publicUsers
      description: Get one User by username
      operationId: publicUsers#getUserByUsername
      parameters:
      - name: username
        in: path
        required: true
        type: string
        maxLength: 20
        minLength: 3
        pattern: ^[a-z0-9_\-]+$
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/PublicUsersGetUserByUsernameResponseBody'
            required:
            - user
            - success
        "403":
          description: Forbidden response.
          schema:
            type: string
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/PublicUsersGetUserByUsernameUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /v1/web/public/user/recents/{offset}/{limit}:
    get:
      tags:
      - publicUsers
      summary: listUsersMostRecent publicUsers
      description: List users the most recent
      operationId: publicUsers#listUsersMostRecent
      parameters:
      - name: offset
        in: path
        description: Offset for pagination
        required: true
        type: integer
        minimum: 0
      - name: limit
        in: path
        description: Limit of items listed for pagination
        required: true
        type: integer
        minimum: 0
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/PublicUsersListUsersMostRecentResponseBody'
            required:
            - users
            - success
            - count
        "403":
          description: Forbidden response.
          schema:
            type: string
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/PublicUsersListUsersMostRecentUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /v1/web/public/user/search:
    patch:
      tags:
      - publicUsers
      summary: listUsers publicUsers
      description: List users for search bar
      operationId: publicUsers#listUsers
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: ListUsersRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/PublicUsersListUsersRequestBody'
          required:
          - key
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/PublicUsersListUsersResponseBody'
            required:
            - users
            - success
        "403":
          description: Forbidden response.
          schema:
            type: string
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/PublicUsersListUsersUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /v1/web/user/{id}:
    get:
      tags:
      - users
      summary: getUserByID users
      description: Get one User
      operationId: users#getUserByID
      parameters:
      - name: id
        in: path
        description: Unique ID of the User
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersGetUserByIDResponseBody'
            required:
            - user
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersGetUserByIDUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/web/user/edit:
    put:
      tags:
      - users
      summary: updateDescription users
      description: Update main info like email, username, firstname, lastname
      operationId: users#updateDescription
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: UpdateDescriptionRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsersUpdateDescriptionRequestBody'
          required:
          - email
          - id
          - username
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersUpdateDescriptionResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersUpdateDescriptionUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /v1/web/user/remove/{id}:
    delete:
      tags:
      - users
      summary: deleteUser users
      description: Delete one User by ID
      operationId: users#deleteUser
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersDeleteUserResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersDeleteUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
definitions:
  AuthEmailExistRequestBody:
    title: AuthEmailExistRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@gmail.com
        format: email
    example:
      email: guillaume@gmail.com
    required:
    - email
  AuthEmailExistResponseBody:
    title: AuthEmailExistResponseBody
    type: object
    properties:
      exist:
        type: boolean
        example: false
      success:
        type: boolean
        example: true
    example:
      exist: false
      success: true
    required:
    - exist
    - success
  AuthEmailExistUnknownErrorResponseBody:
    title: AuthEmailExistUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  AuthResetPasswordRequestBody:
    title: AuthResetPasswordRequestBody
    type: object
    properties:
      code:
        type: string
        example: ZGI5E
        minLength: 5
        maxLength: 5
      confirm_password:
        type: string
        description: Minimum 9 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 9
      email:
        type: string
        example: guillaume@gmail.com
        format: email
      password:
        type: string
        description: Minimum 9 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 9
    example:
      code: ZGI5E
      confirm_password: JeSuisUnTest974
      email: guillaume@gmail.com
      password: JeSuisUnTest974
    required:
    - email
    - code
    - password
    - confirm_password
  AuthResetPasswordResponseBody:
    title: AuthResetPasswordResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: true
    example:
      success: false
    required:
    - success
  AuthResetPasswordUnknownErrorResponseBody:
    title: AuthResetPasswordUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  AuthSendConfirmationRequestBody:
    title: AuthSendConfirmationRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@gmail.com
        format: email
    example:
      email: guillaume@gmail.com
    required:
    - email
  AuthSendConfirmationResponseBody:
    title: AuthSendConfirmationResponseBody
    type: object
    properties:
      exist:
        type: boolean
        example: false
      success:
        type: boolean
        example: true
    example:
      exist: false
      success: true
    required:
    - exist
    - success
  AuthSendConfirmationUnknownErrorResponseBody:
    title: AuthSendConfirmationUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  BoContactDeleteBoContactResponseBody:
    title: BoContactDeleteBoContactResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
    example:
      success: true
    required:
    - success
  BoContactDeleteBoContactUnknownErrorResponseBody:
    title: BoContactDeleteBoContactUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  BoContactDeleteBoManyContactRequestBody:
    title: BoContactDeleteBoManyContactRequestBody
    type: object
    properties:
      tab:
        type: array
        items:
          type: string
          example: Dolor facilis et.
        example:
        - Molestiae quos quo est nihil sapiente.
        - Suscipit ut aliquid.
    example:
      tab:
      - Enim et quia.
      - Ut autem quis.
    required:
    - tab
  BoContactDeleteBoManyContactResponseBody:
    title: BoContactDeleteBoManyContactResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: true
    example:
      success: true
    required:
    - success
  BoContactDeleteBoManyContactUnknownErrorResponseBody:
    title: BoContactDeleteBoManyContactUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  BoContactGetBoContactByIDResponseBody:
    title: BoContactGetBoContactByIDResponseBody
    type: object
    properties:
      contact:
        $ref: '#/definitions/resContactResponseBody'
      success:
        type: boolean
        example: false
    example:
      contact:
        email: guillaume@gmail.com
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        message: Vous embauchez ?
        user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      success: false
    required:
    - success
  BoContactGetBoContactByIDUnknownErrorResponseBody:
    title: BoContactGetBoContactByIDUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  BoContactGetBoContactResponseBody:
    title: BoContactGetBoContactResponseBody
    type: object
    properties:
      contacts:
        type: array
        items:
          $ref: '#/definitions/resContactResponseBody'
        description: All messages
        example:
        - email: guillaume@gmail.com
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          message: Vous embauchez ?
          user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        - email: guillaume@gmail.com
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          message: Vous embauchez ?
          user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        - email: guillaume@gmail.com
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          message: Vous embauchez ?
          user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        - email: guillaume@gmail.com
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          message: Vous embauchez ?
          user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      count:
        type: integer
        description: total of messages
        example: 461642138316235192
        format: int64
      success:
        type: boolean
        example: true
    example:
      contacts:
      - email: guillaume@gmail.com
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        message: Vous embauchez ?
        user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      - email: guillaume@gmail.com
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        message: Vous embauchez ?
        user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      count: 3491694543883905577
      success: false
    required:
    - contacts
    - success
    - count
  BoContactGetBoContactUnknownErrorResponseBody:
    title: BoContactGetBoContactUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  BoDeleteBoManyUsersRequestBody:
    title: BoDeleteBoManyUsersRequestBody
    type: object
    properties:
      tab:
        type: array
        items:
          type: string
          example: Rerum officia.
        example:
        - Quam quasi harum.
        - Amet corrupti molestias.
    example:
      tab:
      - Impedit quaerat amet tempore sunt explicabo.
      - Sit eligendi est.
    required:
    - tab
  BoDeleteBoManyUsersResponseBody:
    title: BoDeleteBoManyUsersResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
    example:
      success: false
    required:
    - success
  BoDeleteBoManyUsersUnknownErrorResponseBody:
    title: BoDeleteBoManyUsersUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  BoDeleteBoUserResponseBody:
    title: BoDeleteBoUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
    example:
      success: false
    required:
    - success
  BoDeleteBoUserUnknownErrorResponseBody:
    title: BoDeleteBoUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  BoGetBoUserResponseBody:
    title: BoGetBoUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: false
      user:
        avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - user
    - success
  BoGetBoUserUnknownErrorResponseBody:
    title: BoGetBoUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  BoGetBoUsersResponseBody:
    title: BoGetBoUsersResponseBody
    type: object
    properties:
      count:
        type: integer
        description: total of users
        example: 7226229823874064717
        format: int64
      success:
        type: boolean
        example: false
      users:
        type: array
        items:
          $ref: '#/definitions/resUserResponseBody'
        description: All users
        example:
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
    example:
      count: 149874184387574442
      success: false
      users:
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - users
    - success
    - count
  BoGetBoUsersUnknownErrorResponseBody:
    title: BoGetBoUsersUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  BoUpdateBoUserRequestBody:
    title: BoUpdateBoUserRequestBody
    type: object
    properties:
      user:
        $ref: '#/definitions/payloadUserRequestBody'
    example:
      user:
        avatar: Nostrum enim.
        email: guillaume@gmail.com
        firstname: Guillaume
        lastname: Morin
        role: user
        username: guillaumemoriin
    required:
    - user
  BoUpdateBoUserResponseBody:
    title: BoUpdateBoUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: false
      user:
        avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - user
    - success
  BoUpdateBoUserUnknownErrorResponseBody:
    title: BoUpdateBoUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  ContactsAddMessageRequestBody:
    title: ContactsAddMessageRequestBody
    type: object
    properties:
      msg:
        type: string
        example: Je reprends l'app pour un million
        minLength: 2
        maxLength: 500
      user_id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        format: uuid
    example:
      msg: Je reprends l'app pour un million
      user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
    required:
    - user_id
    - msg
  ContactsAddMessageResponseBody:
    title: ContactsAddMessageResponseBody
    type: object
    properties:
      success:
        type: boolean
        default: false
        example: true
    example:
      success: false
    required:
    - success
  ContactsAddMessageUnknownErrorResponseBody:
    title: ContactsAddMessageUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  Error:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the
          problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence
          of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: true
    description: Error response result type (default view)
    example:
      fault: false
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: true
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  FilesDeleteFileRequestBody:
    title: FilesDeleteFileRequestBody
    type: object
    properties:
      url:
        type: string
        example: /public/uploads/2021/12/2ca51d10-b660-4b2c-b27f-f7a119642885.png
    example:
      url: /public/uploads/2021/12/2ca51d10-b660-4b2c-b27f-f7a119642885.png
    required:
    - url
  FilesDeleteFileResponseBody:
    title: FilesDeleteFileResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
    example:
      success: true
    required:
    - success
  FilesDeleteFileUnknownErrorResponseBody:
    title: FilesDeleteFileUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  FilesImportFileRequestBody:
    title: FilesImportFileRequestBody
    type: object
    properties:
      content:
        type: string
        description: content of image
        example:
        - 73
        - 108
        - 108
        - 111
        - 32
        - 108
        - 97
        - 98
        - 111
        - 114
        - 117
        - 109
        - 32
        - 101
        - 97
        - 46
        format: byte
      filename:
        type: string
        description: uploaded file name
        example: foo.jpg
      format:
        type: string
        description: uploaded file format
        example: image/jpeg
      h:
        type: integer
        description: height of image if you crop
        example: 148696302461631751
        format: int64
      mime:
        type: string
        description: url file
        example: Omnis qui pariatur enim quia.
      size:
        type: integer
        description: size of image
        example: 7888196892755125868
        format: int64
      url:
        type: string
        description: url file
        example: Architecto dolorem autem.
      w:
        type: integer
        description: width of image if you crop
        example: 9130530644295381537
        format: int64
    example:
      content:
      - 68
      - 117
      - 99
      - 105
      - 109
      - 117
      - 115
      - 32
      - 101
      - 115
      - 116
      - 46
      filename: foo.jpg
      format: image/jpeg
      h: 6672894215210738694
      mime: Magni maiores.
      size: 4399023947504830209
      url: Ipsam facere est in molestiae esse exercitationem.
      w: 6463261863869225493
    required:
    - filename
    - content
    - format
  FilesImportFileResponseBody:
    title: FilesImportFileResponseBody
    type: object
    properties:
      file:
        $ref: '#/definitions/resFileResponseBody'
      success:
        type: boolean
        example: true
    example:
      file:
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        mime: Cumque at aut eveniet quibusdam.
        name: foo.png
        size: 8463046965258278579
        url: Velit pariatur mollitia quisquam blanditiis.
      success: false
    required:
    - success
    - file
  FilesImportFileUnknownErrorResponseBody:
    title: FilesImportFileUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  JWTTokenRefreshRequestBody:
    title: JWTTokenRefreshRequestBody
    type: object
    properties:
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    example:
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    required:
    - refresh_token
  JWTTokenRefreshResponseBody:
    title: JWTTokenRefreshResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: true
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: true
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenRefreshUnknownErrorResponseBody:
    title: JWTTokenRefreshUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  JWTTokenSigninBoRequestBody:
    title: JWTTokenSigninBoRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      password:
        type: string
        description: Minimum 9 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 9
    example:
      email: guillaume@epitech.eu
      password: JeSuisUnTest974
    required:
    - password
    - email
  JWTTokenSigninBoResponseBody:
    title: JWTTokenSigninBoResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: true
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: true
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenSigninBoUnknownErrorResponseBody:
    title: JWTTokenSigninBoUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  JWTTokenSigninRequestBody:
    title: JWTTokenSigninRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      password:
        type: string
        description: Minimum 9 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 9
    example:
      email: guillaume@epitech.eu
      password: JeSuisUnTest974
    required:
    - password
    - email
  JWTTokenSigninResponseBody:
    title: JWTTokenSigninResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: true
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: false
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenSigninUnknownErrorResponseBody:
    title: JWTTokenSigninUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  JWTTokenSignupRequestBody:
    title: JWTTokenSignupRequestBody
    type: object
    properties:
      confirm_password:
        type: string
        description: Minimum 9 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 9
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      password:
        type: string
        description: Minimum 9 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 9
      username:
        type: string
        example: guillaumemoriin
        minLength: 3
        maxLength: 20
    example:
      confirm_password: JeSuisUnTest974
      email: guillaume@epitech.eu
      password: JeSuisUnTest974
      username: guillaumemoriin
    required:
    - email
    - password
    - confirm_password
    - username
  JWTTokenSignupResponseBody:
    title: JWTTokenSignupResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: false
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: true
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenSignupUnknownErrorResponseBody:
    title: JWTTokenSignupUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  OAuthOAuthBadRequestResponseBody:
    title: OAuthOAuthBadRequestResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: Ad libero voluptas aspernatur.
      expires_in:
        type: integer
        example: 9018077450687815127
        format: int64
      success:
        type: boolean
        example: true
      token_type:
        type: string
        example: Eum perferendis facilis.
    example:
      access_token: Excepturi tenetur totam consequatur.
      expires_in: 6072844836572951646
      success: false
      token_type: Natus dolores impedit reiciendis suscipit vel ullam.
    required:
    - access_token
    - token_type
    - expires_in
    - success
  OAuthOAuthCreatedResponseBody:
    title: OAuthOAuthCreatedResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: Minima dolor accusamus omnis veniam soluta.
      expires_in:
        type: integer
        example: 6246377567517904053
        format: int64
      success:
        type: boolean
        example: false
      token_type:
        type: string
        example: Et dolores nisi quia quis.
    example:
      access_token: Esse et vitae aut non blanditiis sunt.
      expires_in: 4322289941673867609
      success: false
      token_type: Odio adipisci.
    required:
    - access_token
    - token_type
    - expires_in
    - success
  OAuthOAuthRequestBody:
    title: OAuthOAuthRequestBody
    type: object
    properties:
      client_id:
        type: string
        example: Inventore minima consequatur nesciunt ut incidunt.
      client_secret:
        type: string
        example: Quas cumque.
      grant_type:
        type: string
        example: Optio rerum sunt facere ipsam.
    example:
      client_id: Explicabo totam quia perspiciatis dolorum.
      client_secret: Distinctio aperiam excepturi eveniet velit aperiam.
      grant_type: Natus dolor eaque modi.
    required:
    - client_id
    - client_secret
    - grant_type
  OAuthOAuthUnknownErrorResponseBody:
    title: OAuthOAuthUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  PublicUsersGetUserByUsernameResponseBody:
    title: PublicUsersGetUserByUsernameResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: false
      user:
        avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - user
    - success
  PublicUsersGetUserByUsernameUnknownErrorResponseBody:
    title: PublicUsersGetUserByUsernameUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  PublicUsersListUsersMostRecentResponseBody:
    title: PublicUsersListUsersMostRecentResponseBody
    type: object
    properties:
      count:
        type: integer
        description: total of users
        example: 5092835139479383356
        format: int64
      success:
        type: boolean
        example: true
      users:
        type: array
        items:
          $ref: '#/definitions/resUserResponseBody'
        description: Result is an an array of user
        example:
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
    example:
      count: 868775246152618760
      success: false
      users:
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - users
    - success
    - count
  PublicUsersListUsersMostRecentUnknownErrorResponseBody:
    title: PublicUsersListUsersMostRecentUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  PublicUsersListUsersRequestBody:
    title: PublicUsersListUsersRequestBody
    type: object
    properties:
      key:
        type: string
        example: guillaumemoriin
    example:
      key: guillaumemoriin
    required:
    - key
  PublicUsersListUsersResponseBody:
    title: PublicUsersListUsersResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      users:
        type: array
        items:
          $ref: '#/definitions/resUserResponseBody'
        description: Result is an an array of user
        example:
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
        - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
          email: guillaume@gmail.com
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          role: Nobis recusandae rerum voluptatibus est officiis.
          username: guillaumemorin
    example:
      success: true
      users:
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
      - avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - users
    - success
  PublicUsersListUsersUnknownErrorResponseBody:
    title: PublicUsersListUsersUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  UsersDeleteUserResponseBody:
    title: UsersDeleteUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: true
    example:
      success: false
    required:
    - success
  UsersDeleteUserUnknownErrorResponseBody:
    title: UsersDeleteUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  UsersGetUserByIDResponseBody:
    title: UsersGetUserByIDResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: false
      user:
        avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - user
    - success
  UsersGetUserByIDUnknownErrorResponseBody:
    title: UsersGetUserByIDUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  UsersUpdateDescriptionRequestBody:
    title: UsersUpdateDescriptionRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@gmail.com
        format: email
      firstname:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 20
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        format: uuid
      lastname:
        type: string
        example: Morin
        minLength: 3
        maxLength: 20
      username:
        type: string
        example: guillaumemoriin
        pattern: ^[a-z0-9_\-]+$
        minLength: 3
        maxLength: 20
    example:
      email: guillaume@gmail.com
      firstname: Guillaume
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      lastname: Morin
      username: guillaumemoriin
    required:
    - email
    - id
    - username
  UsersUpdateDescriptionResponseBody:
    title: UsersUpdateDescriptionResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: false
      user:
        avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
        email: guillaume@gmail.com
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        role: Nobis recusandae rerum voluptatibus est officiis.
        username: guillaumemorin
    required:
    - success
  UsersUpdateDescriptionUnknownErrorResponseBody:
    title: UsersUpdateDescriptionUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  payloadUserRequestBody:
    title: payloadUserRequestBody
    type: object
    properties:
      avatar:
        type: string
        description: Url of the avatar and stock in db
        example: Autem atque perspiciatis molestiae.
      email:
        type: string
        example: guillaume@gmail.com
        format: email
      firstname:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 20
      lastname:
        type: string
        example: Morin
        minLength: 3
        maxLength: 20
      role:
        type: string
        description: role of the user
        example: pro
        enum:
        - admin
        - user
        - pro
      username:
        type: string
        example: guillaumemoriin
        pattern: ^[a-z0-9_\-]+$
        minLength: 2
        maxLength: 20
    example:
      avatar: Voluptas veniam.
      email: guillaume@gmail.com
      firstname: Guillaume
      lastname: Morin
      role: pro
      username: guillaumemoriin
    required:
    - email
    - username
    - firstname
    - lastname
    - avatar
    - role
  resContactResponseBody:
    title: resContactResponseBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@gmail.com
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      message:
        type: string
        example: Vous embauchez ?
      user_id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
    example:
      email: guillaume@gmail.com
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      message: Vous embauchez ?
      user_id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
    required:
    - id
    - email
    - user_id
    - message
  resFileResponseBody:
    title: resFileResponseBody
    type: object
    properties:
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        format: uuid
      mime:
        type: string
        example: Et quidem quae.
      name:
        type: string
        example: foo.png
      size:
        type: integer
        example: 7624449709937065176
        format: int64
      url:
        type: string
        example: Iste necessitatibus sint et est sed molestiae.
    example:
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      mime: Est alias eaque cupiditate illum.
      name: foo.png
      size: 8388756197555321874
      url: Quis sapiente consequuntur.
    required:
    - id
    - name
    - url
  resUserResponseBody:
    title: resUserResponseBody
    type: object
    properties:
      avatar:
        type: string
        example: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
      email:
        type: string
        example: guillaume@gmail.com
      firstname:
        type: string
        example: Guillaume
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      lastname:
        type: string
        example: Morin
      role:
        type: string
        description: User is admin or not
        example: Maiores reprehenderit est illo maiores.
      username:
        type: string
        example: guillaumemorin
    example:
      avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
      email: guillaume@gmail.com
      firstname: Guillaume
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      lastname: Morin
      role: Deserunt mollitia maxime eius.
      username: guillaumemorin
    required:
    - id
    - email
    - username
    - firstname
    - lastname
    - avatar
    - role
securityDefinitions:
  OAuth2_header_Authorization:
    type: oauth2
    description: Use OAuth2 to authenticate
    flow: application
    tokenUrl: /authorization
    scopes:
      api:read: Provides read access
  jwt_header_jwtToken:
    type: apiKey
    description: |-
      Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".

      **Security Scopes**:
        * `api:read`: Read-only access
        * `api:write`: Read and write access
    name: jwtToken
    in: header
