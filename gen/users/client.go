// Code generated by goa v3.7.3, DO NOT EDIT.
//
// users client
//
// Command:
// $ goa gen webcup/design

package users

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "users" service client.
type Client struct {
	DeleteUserEndpoint        goa.Endpoint
	UpdateAvatarEndpoint      goa.Endpoint
	GetUserByIDEndpoint       goa.Endpoint
	UpdateDescriptionEndpoint goa.Endpoint
}

// NewClient initializes a "users" service client given the endpoints.
func NewClient(deleteUser, updateAvatar, getUserByID, updateDescription goa.Endpoint) *Client {
	return &Client{
		DeleteUserEndpoint:        deleteUser,
		UpdateAvatarEndpoint:      updateAvatar,
		GetUserByIDEndpoint:       getUserByID,
		UpdateDescriptionEndpoint: updateDescription,
	}
}

// DeleteUser calls the "deleteUser" endpoint of the "users" service.
func (c *Client) DeleteUser(ctx context.Context, p *DeleteUserPayload) (res *DeleteUserResult, err error) {
	var ires interface{}
	ires, err = c.DeleteUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*DeleteUserResult), nil
}

// UpdateAvatar calls the "updateAvatar" endpoint of the "users" service.
func (c *Client) UpdateAvatar(ctx context.Context, p *UpdateAvatarPayload) (res *UpdateAvatarResult, err error) {
	var ires interface{}
	ires, err = c.UpdateAvatarEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdateAvatarResult), nil
}

// GetUserByID calls the "getUserByID" endpoint of the "users" service.
func (c *Client) GetUserByID(ctx context.Context, p *GetUserByIDPayload) (res *GetUserByIDResult, err error) {
	var ires interface{}
	ires, err = c.GetUserByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetUserByIDResult), nil
}

// UpdateDescription calls the "updateDescription" endpoint of the "users"
// service.
func (c *Client) UpdateDescription(ctx context.Context, p *UpdateDescriptionPayload) (res *UpdateDescriptionResult, err error) {
	var ires interface{}
	ires, err = c.UpdateDescriptionEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdateDescriptionResult), nil
}
